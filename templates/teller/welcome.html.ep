% layout 'default';
% title 'Welcome';
<h1>Hi, <%= session 'name' %>!</h1>
<p><%= link_to Logout => 'logout' %></p>
<h1>Balance</h1>
<p><%= currency balance %></p>
<h1>Record Transaction</h1>
%= form_for write_tx => begin
<table>
<tr>
  <th>Date</th>
  <th>To/From</th>
  <th>Memo</th>
  <th>Amount</th>
  <th>&nbsp;</th>
</tr>
<tr>
  <td><%= date_field 'date' => now->ymd %></td>
  <td><%= text_field 'tx_with' %></td>
  <td><%= text_field 'memo' %></td>
  <td><%= number_field 'pennies', step => '0.01' %></td>
  <td><%= submit_button %></td>
</tr>
</table>
% end
<hr />
% my $tx_log = tx_log;
% if ($tx_log->size) {
<table>
<tr>
  <th>Date</th>
  <th>To/From</th>
  <th>Memo</th>
  <th>Amount</th>
  <th>Balance</th>
  <th>&nbsp;</th>
</tr>
% my $balance = 0;
% $tx_log->each(sub {
  % $balance += $_->{pennies};
  % warn $balance;
  <tr>
    <td><%= now($_->{date})->ymd %></td>
    <td><%= $_->{tx_with} %></td>
    <td><%= $_->{memo} %></td>
    <td><%= currency $_->{pennies} / 100 %></td>
    <td><%= currency $balance / 100 %></td>
    <td><%= button_to 'ðŸ—‘' => 'remove_tx' => {id => $_->{id}} %></td>
  </tr>
% });
</table>
<div style="width: 80%; margin: auto;">
    <canvas id="myLineChart"></canvas>
</div>

<script>
    // Function to fetch data from the API endpoint
    async function fetchData() {
        try {
            const response = await fetch('<%= url_for('balance', format => 'json') %>');
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error fetching data:', error);
            return [];
        }
    }

    // Function to update the chart with fetched data
    async function updateChart() {
        const data = await fetchData();

        const chartData = {
            labels: data.map(item => item.date), // Assuming your API response has a 'date' property
            datasets: [{
                label: 'Money Transactions',
                data: data.map(item => item.amount), // Assuming your API response has an 'amount' property
                fill: false,
                borderColor: 'rgb(75, 192, 192)',
                borderWidth: 2,
                pointRadius: 5,
                pointBackgroundColor: 'rgb(75, 192, 192)',
            }]
        };

        const config = {
            type: 'line',
            data: chartData,
            options: {
                responsive: true,
                scales: {
                    x: {
                        type: 'time',
                        time: {
                            unit: 'day',
                            tooltipFormat: 'll',
                        },
                        title: {
                            display: true,
                            text: 'Date',
                        },
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Money',
                        },
                    },
                },
                adapters: {
                    date: {
                        // Use Moment.js as the date adapter
                        formats: {
                            datetime: 'YYYY-MM-DD',
                        },
                    },
                },
            },
        };

        const ctx = document.getElementById('myLineChart');
        const myLineChart = new Chart(ctx, config);
    }

    // Call the updateChart function to fetch and display data
    updateChart();
</script>
% }

